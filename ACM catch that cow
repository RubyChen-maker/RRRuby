#include<iostream>
#include<cstdio>
#define N 100000
using namespace std;
int q[2*N] , h[2*N] ;  
//Define one is the number of steps taken hash, and the other is the path of marking records
int n,k;
int has( int i ) 
{          //Judge whether it is out of bounds	
 if( i >= 2*N || i< 0 || h[i] )		
 return 0 ;	else  return 1 ;
}
int BFS(int n,int k) 
{	
 if( n==k ) return 0 ;	
 int X, first=0 , last = 0 ;	
 q[first++] = n ;    //Assign the starting place to the array	
 while( last < first ) 
 {		
  X = q[last++] ; //Where is the current step		
  if( X-1 == k || X+1 == k || X*2== k ) //Find the target and exit		
  return h[X]+1 ;		
  if( has( X-1 ) )           //Search in three ways		
  h[X-1] = h[X]+1 , q[first++] = X-1 ;		
  if( has( X+1 ) )			
  h[X+1] = h[X]+1 , q[first++] = X+1 ;		
  if( has( X*2 ) )			
  h[X*2] = h[X]+1 , q[first++] = X*2 ;	
 }	
return -1 ;
}

int main(  ) 
{	
 while( scanf("%d%d" ,&n , &k )==2 ) 
 {		
  for( int i=0 ; i< N*2 ; i++ )			
  h[i] = 0 ;		
  cout<<BFS( n , k )<<endl ;	
 }	
return 0;
}


